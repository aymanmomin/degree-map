courseCode,title,departmentCode,description,preRequisites,antiRequisites,topics
CPSC203,Introduction to Problem Solving using Application Software,1,"Introduction to computer fundamentals; contemporary topics, such as security and privacy, and the Internet and World Wide Web. Problem solving, analysis and design using application software such as spreadsheets and word processors.","[]","[]","[]"
CPSC217,Introduction to Computer Science for Multidisciplinary Studies I,1,"Introduction to problem solving, analysis and design of small-scale computational systems and implementation using a procedural programming language. For students wishing to combine studies in computer science with studies in other disciplines.","[]","[]","[]"
CPSC219,Introduction to Computer Science for Multidisciplinary Studies II,1,"Continuation of Introduction to Computer Science for Multidisciplinary Studies I. Emphasis on object-oriented analysis and design of small-scale computational systems and implementation using an object-oriented language. Issues of design, modularization and programming style will be emphasized.","[CPSC217, DS211]","[]","[]"
CPSC231,Introduction to Computer Science for Computer Science Majors I,1,"Introduction to problem solving, the analysis and design of small-scale computational systems, and implementation using a procedural programming language. For computer science majors.","[]","[CPSC215, CPSC217, DS211, CMPE339, ENG233, DE233]","[problem solving, analysis, design, computational systems, procedural programming, CS majors]"
CPSC233,Introduction to Computer Science for Computer Science Majors II,1,"Continuation of Introduction to Computer Science for Computer Science Majors I. Emphasis on object-oriented analysis and design of small-scale computational systems and implementation using an object-oriented language. Issues of design, modularization, and programming style will be emphasized.","[CPSC231]","[CPSC219, CPSC235, EE497, CMPE493]","[object-oriented analysis, design, computational systems, modularization, programming style, CS majors]"
CPSC235,Advanced Introduction to Computer Science,1,"An accelerated introduction to problem solving, the analysis and design of small-scale computational systems and implementation using both procedural and object-oriented programming languages. Issues of design, modularization, and programming style will be emphasized.","[]","[CPSC215, CPSC217, CPSC219, CPSC231, CPSC233, CMPE339, CMPE493, DS211]","[accelerated problem solving, analysis, design, procedural programming, object-oriented programming, modularization, programming style]"
CPSC251,Theoretical Foundations of Computer Science I,1,"Proof techniques. Recursion and iteration. Specification of algorithmic problems and fundamental proof techniques in Computer Science. Discrete structures such as graphs, trees, strings, functions, and their computer representation. Counting, permutations. Random events. Conditional events. Applications in Computer Science.","[CPSC219, CPSC231]","[MATH271, MATH273]","[proof techniques, recursion, iteration, algorithm specification, discrete structures, graphs, trees, strings, functions, counting, permutations, random events, conditional events]"
CPSC313,Introduction to Computability,1,"An introduction to abstract models of sequential computation, including finite automata, regular expressions, context-free grammars, and Turing machines. Formal languages, including regular, context-free, and recursive languages, methods for classifying languages according to these types, and relationships among these classes.","[ MATH271 , MATH273 , PHIL279 , PHIL377 , CPSC219 , CPSC233 , CPSC235 ]","[ CPSC351 ]","[ abstract models , sequential computation , finite automata , regular expressions , context-free grammars , Turing machines , formal languages , classification of languages ]"
CPSC319,Data Structures Algorithms and Their Applications,1,"Fundamental data structures, including arrays, lists, stacks, queues, trees, hash tables, and graphs. Algorithms for searching and sorting. Introduction to analysis of algorithms. Applications of these data structures and algorithms.","[ CPSC219 , CPSC233 , CPSC235 , CE335 , CE339 , SE337 ]","[ CPSC331 ]","[ data structures , arrays , lists , stacks , queues , trees , hash tables , graphs , searching algorithms , sorting algorithms , algorithm analysis , applications of data structures ]"
CPSC329,Explorations in Information Security and Privacy,1,"A broad survey of topics in information security and privacy, with the purpose of cultivating an appropriate mindset for approaching security and privacy issues. Topics will be motivated by recreational puzzles. Legal and ethical considerations will be introduced as necessary.","[ Math30_1 , Math30_2 , Math31 ]","[]","[ information security , privacy , legal considerations , ethical considerations , recreational puzzles ]"
CPSC335,Intermediate Information Structures,1,"A continuation of Computer Science 331. Collision resolution in hash tables, search algorithms, advanced tree structures, strings. Advanced algorithmic tools for storing and manipulation of information.","[ CPSC319 , CPSC331 ]","[]","[ collision resolution , hash tables , search algorithms , advanced tree structures , advanced algorithmic tools , information manipulation ]"
CPSC351,Theoretical Foundations of Computer Science II,1,"Probability spaces, random variables, expectation, independence, concentration bounds, conditional probability, repeated trials, error bounds. Turing machines and finite automata. Deterministic, nondeterministic, and probabilistic models of computation. Languages, regular languages and regular expressions. Methods for classifying computational problems as decidable or undecidable.","[ CPSC219 , CPSC233 , CPSC235 , Math249 , Math265 , Math275 , Philosophy279 , Philosophy377 , CPSC251 , Stats213 , Math271 , Math273 ]","[ CPSC313 ]","[ probability spaces , random variables , expectation , independence , Turing machines , finite automata , deterministic models , nondeterministic models , probabilistic models , decidable problems , undecidable problems ]"
CPSC355,Computing Machinery I,1,"An introduction to computing machinery establishing the connection between programs expressed in a compiled language, an assembly language, and machine code, and how such code is executed. Includes the detailed study of a modern CPU architecture, its assembly language and internal data representation, and the relationship between high-level program constructs and machine operations.","[ CPSC219 , CPSC233 , CPSC235 ]","[ CPSC265 , CE369 ]","[ computing machinery , compiled language , assembly language , machine code , CPU architecture , high-level program constructs , machine operations ]"
CPSC359,Computing Machinery II,1,"An introduction to hardware and microprocessor design, including the connection between gate-level digital logic circuits and sequential machines that can execute an algorithm and perform input and output.","[ CPSC355 , Philosophy279 , Philosophy377 ]","[ CPSC325 , CPSC455 , CE415 ]","[ hardware design , microprocessor design , digital logic circuits , sequential machines , algorithm execution , input and output ]"
CPSC365,C++ Programming,1,"Introduction to the C++ language, with an emphasis on its advanced language constructs and features. Techniques for writing time and space efficient code will be considered.","[CPSC319, CPSC331, CPSC355]","[CE335,SE337]","[C++ language, advanced language construct,time efficiency , space efficiency , programming techniques ]"
CPSC383,Explorations in Artificial Intelligence and Machine Learning,1,"A survey of artificial intelligence and machine learning tools to cultivate an understanding of their capability, utility, and societal/ethical/legal considerations. Popular APIs will be used to develop simple applied examples.","[ CPSC217 , CPSC231 ]","[]","[ artificial intelligence , machine learning , societal considerations , ethical considerations , legal considerations , APIs , applied examples ]"
CPSC393,Metacognition in Self-directed Learning Methodologies,1,"Remain current in Computer Science as this field evolves by developing a reflective life-long learning practice. Independent student work will include using a wide variety of sources and developing the ability to self-assess progress in learning and knowledge in topics related to Computer Science.","[ CPSC219 , CPSC233 , DataScience311 , MajorInCPSC , MajorInBioinformatics , MajorInEE , MajorInSE , MajorInCE , MajorInNSC ]","[]","[ metacognition , self-directed learning , life-long learning , independent study , self-assessment , computer science ]"